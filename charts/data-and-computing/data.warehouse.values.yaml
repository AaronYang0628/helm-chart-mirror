global:
  storageClass: "" 
  registryPrefix: m.lab.zverse.space
  pullPolicy: IfNotPresent
  security: 
    allowInsecureImages: true

resourcesPreset: "nano"

ingestTaskOperator:
  name: ingest-operator
  installCRDs: true
  commonLabels: {}
  commonAnnotations: {}
  image:
    registry: docker-registry.lab.zverse.space
    repository: ay-dev/metadata-operator
    tag: fix
    pullPolicy: Always
    pullSecrets: []
  serviceAccount:
    automount: true
    annotations: {}
    name: "metadata-ingest-operator"
    role:
      name: "metadata-ingest-operator"
    roleBinding:
      name: "metadata-ingest-operator"
  kubeConfig:
    cluster:
      server: https://192.168.58.2:8443
      certData: xxx==
    user:
      key: xxx=
      certData: xxx==
  automountServiceAccountToken: false
  podLabels: {}
  affinity: {}
  podAnnotations: {}
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  hostNetwork: false
  dnsPolicy: ""
  dnsConfig: {}
  hostIPC: false
  priorityClassName: ""
  nodeSelector: {}
  tolerations: []
  schedulerName: ""
  topologySpreadConstraints: []
  podSecurityContext:
    enabled: true
    fsGroupChangePolicy: Always
    supplementalGroups: []
    fsGroup: 0
  terminationGracePeriodSeconds: ""
  hostAliases: []
  command: []
  args: []
  diagnosticMode:
    enabled: false
    command: ["tail", "-f", "/etc/hosts"]
    args: []
  extraEnvVars: []
  extraEnvVarsCM: ""
  extraEnvVarsSecret: ""
  revisionHistoryLimit: 10
  updateStrategy:
    type: RollingUpdate
    rollingUpdate: {}
  lifecycleHooks: {}
  resources: 
    limits:
      cpu: 2
      ephemeral-storage: 8Gi
      memory: 2Gi
    requests:
      cpu: 1
      ephemeral-storage: 8Gi
      memory: 1Gi
  extraVolumes: []
  extraVolumeMounts: []
  livenessProbe:
    enabled: false
    initialDelaySeconds: 30
    timeoutSeconds: 5
    periodSeconds: 10
    failureThreshold: 6
    successThreshold: 1
  startupProbe:
    enabled: false
    initialDelaySeconds: 30
    timeoutSeconds: 5
    periodSeconds: 10
    failureThreshold: 6
    successThreshold: 1
  readinessProbe:
    enabled: false
    initialDelaySeconds: 5
    timeoutSeconds: 3
    periodSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  service:
    name: healthz
    healthz:
      type: ClusterIP
      port: 8099
      targetPort: 8099


flink:
  enabled: true

elasticsearch:
  enabled: true
  global:
    kibanaEnabled: true
  clusterName: elastic
  image:
    registry: m.lab.zverse.space/docker.io
    pullPolicy: IfNotPresent
  security:
    enabled: false
  service:
    type: ClusterIP
  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: self-signed-ca-issuer
      nginx.ingress.kubernetes.io/rewrite-target: /$1
    hostname: elastic-search.metadata.dev
    ingressClassName: nginx
    path: /?(.*)
    tls: true
  master:
    masterOnly: false
    replicaCount: 1
    persistence:
      enabled: false
    resources:
      requests:
        cpu: 1
        memory: 2048Mi
      limits:
        cpu: 2
        memory: 4096Mi
    heapSize: 2g
  data:
    replicaCount: 0
    persistence:
      enabled: false
  coordinating:
    replicaCount: 0
  ingest:
    enabled: true
    replicaCount: 0
    service:
      enabled: false
      type: ClusterIP
    ingress:
      enabled: false
  metrics:
    enabled: false
    image:
      registry: m.lab.zverse.space/docker.io
      pullPolicy: IfNotPresent
  volumePermissions:
    enabled: false
    image:
      registry: m.lab.zverse.space/docker.io
      pullPolicy: IfNotPresent
  sysctlImage:
    enabled: true
    registry: m.lab.zverse.space/docker.io
    pullPolicy: IfNotPresent
  kibana:
    elasticsearch:
      hosts:
        - '{{ include "elasticsearch.service.name" . }}'
      port: '{{ include "elasticsearch.service.ports.restAPI" . }}'
  esJavaOpts: "-Xmx2g -Xms2g"


kafka:
  enabled: true
  image:
    registry: m.lab.zverse.space/docker.io
  controller:
    replicaCount: 1
    persistence:
      enabled: false
    logPersistence:
      enabled: false
    extraConfig: |
      message.max.bytes=5242880
      default.replication.factor=1
      offsets.topic.replication.factor=1
      transaction.state.log.replication.factor=1
  broker:
    replicaCount: 0
    persistence:
      enabled: false
    logPersistence:
      enabled: false
    extraConfig: |
      message.max.bytes=5242880
      default.replication.factor=1
      offsets.topic.replication.factor=1
      transaction.state.log.replication.factor=1
  externalAccess:
    enabled: false
    autoDiscovery:
      enabled: false
      image:
        registry: m.lab.zverse.space/docker.io
  volumePermissions:
    enabled: false
    image:
      registry: m.lab.zverse.space/docker.io
  metrics:
    kafka:
      enabled: false
      image:
        registry: m.lab.zverse.space/docker.io
    jmx:
      enabled: false
      image:
        registry: m.lab.zverse.space/docker.io
  provisioning:
    enabled: false
  kraft:
    enabled: true
  zookeeper:
    enabled: false



